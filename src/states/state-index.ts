import * as states from './states'

export type StateIndex = (typeof StateIndex)[keyof typeof StateIndex]
export const StateIndex = Object.freeze({
  [states.STOP]: 'STOP',
  [states.Main]: 'Main',
  [states.RcData]: 'RcData',
  [states.RawText]: 'RawText',
  [states.BeforeAttribute]: 'BeforeAttribute',
  [states.BeforeAssign]: 'BeforeAssign',
  [states.BeforeCommentData]: 'BeforeCommentData',
  [states.InCommentData]: 'InCommentData',
  [states.Bogus]: 'Bogus',
  [states.ValueQuoted]: 'ValueQuoted',
  [states.ValueAposed]: 'ValueAposed',
  [states.ValueUnquoted]: 'ValueUnquoted',
  [states.RLTs]: 'RLTs',
  [states.LXD]: 'LXD',
  [states.DD]: 'DD',
  [states.DX]: 'DX',
  [states.AmpH]: 'AmpH',
  [states.AmpX]: 'AmpX',
  [states.TOP]: 'TOP',
  [states.Nul]: 'Nul',
  [states.Wsp]: 'Wsp',
  [states.BeforeValue]: 'BeforeValue',
  [states.CR]: 'CR',
  [states.Tsp]: 'Tsp',
  [states.Wrd]: 'Wrd',
  [states.Raw]: 'Raw',
  [states.Rcd]: 'Rcd',
  [states.Att]: 'Att',
  [states.Val]: 'Val',
  [states.ValQ]: 'ValQ',
  [states.ValS]: 'ValS',
  [states.Bog]: 'Bog',
  [states.Cmt]: 'Cmt',
  [states.CmtD]: 'CmtD',
  [states.CmtSD]: 'CmtSD',
  [states.Sep]: 'Sep',
  [states.Amp]: 'Amp',
  [states.Ref]: 'Ref',
  [states.xRef]: 'xRef',
  [states.dRef]: 'dRef',
  [states.LT]: 'LT',
  [states.LTs]: 'LTs',
  [states.LTx]: 'LTx',
  [states.STN]: 'STN',
  [states.ETN]: 'ETN',
  [states.DTN]: 'DTN',
  [states.RawLT]: 'RawLT',
  [states.RcdLT]: 'RcdLT',
  [states.LXDD]: 'LXDD',
  [states.TagE]: 'TagE',
  [states.Bog_]: 'Bog_',
  [states.Cmt_]: 'Cmt_',
  [states.Eq]: 'Eq',
  [states.lQ_]: 'lQ_',
  [states.Sq_]: 'Sq_',
  [states.rQ_]: 'rQ_',
  [states.nRef_]: 'nRef_',
  [states.dRef_]: 'dRef_',
  [states.xRef_]: 'xRef_',
  [states.NL_]: 'NL_',
})

export function getStateLabel(state: number | undefined): string | undefined {
  if (state === undefined) return undefined 
  return (StateIndex as any)[state] || undefined
}
